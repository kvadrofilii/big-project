{
  // Использовать локальную версию typescript
  "typescript.tsdk": "node_modules/typescript/lib",
  // Форматирование кода с помощью prettier
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  // Форматирование при сохранении файла
  "editor.formatOnSave": true,
  // Настройки для плагина i18n-ally
  "i18n-ally.localesPaths": ["public/locales"],
  "i18n-ally.pathMatcher": "{locale}/{namespace}.json",
  "i18n-ally.sourceLanguage": "english",
  "i18n-ally.keystyle": "nested",
  "i18n-ally.enabledFrameworks": ["react", "i18next", "general"],
  //"i18n-ally.namespace": true,
  //"i18n-ally.defaultNamespace": "translation",
  // Путь до конфигурационного файла jest для плагина Jest Runner
  "jestrunner.configPath": "/config/jest/jest.config.ts",
  // Группировка файлов в один
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    "package.json": "package-lock.json, yarn.lock, .browserslistrc, .eslintignore, .eslintrc.js, .gitignore, .nvmrc, .prettierignore, .prettierrc, .stylelintignore, .stylelintrc.js",
  },
  "files.associations": {
    "**/.fttemplates/**": "plaintext"
  },
  "folderTemplates.structures": [
    {
      "name": "Page",
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "<FTName|pascalcase>Page/index.ts",
          "template": "page index"
        },
        {
          "fileName": "<FTName|pascalcase>Page/ui/<FTName|pascalcase>Page.tsx",
          "template": "page page"
        },
        {
          "fileName": "<FTName|pascalcase>Page/ui/<FTName|pascalcase>Page.lazy.tsx",
          "template": "page lazy"
        },
      ]
    },
    {
      "name": "TS component",
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "<FTName|pascalcase>/<FTName|pascalcase>.m.css",
          "template": "css"
        },
        {
          "fileName": "<FTName|pascalcase>/<FTName|pascalcase>.stories.tsx",
          "template": "stories"
        },
        {
          "fileName": "<FTName|pascalcase>/<FTName|pascalcase>.tsx",
          "template": "TS component"
        },
      ]
    },
    {
      "name": "TS memo component",
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "<FTName|pascalcase>/<FTName|pascalcase>.m.css",
          "template": "css"
        },
        {
          "fileName": "<FTName|pascalcase>/<FTName|pascalcase>.stories.tsx",
          "template": "stories"
        },
        {
          "fileName": "<FTName|pascalcase>/<FTName|pascalcase>.tsx",
          "template": "TS memo component"
        },
      ]
    },
    {
      "name": "FSD structure folder",
      "omitParentDirectory": true,
      "structure": [
        {
          "fileName": "<FTName|pascalcase>/model/selectors/get<FTName|pascalcase>/get<FTName|pascalcase>.ts",
          "template": "selectors"
        },
        {
          "fileName": "<FTName|pascalcase>/model/selectors/get<FTName|pascalcase>/get<FTName|pascalcase>.test.ts",
          "template": "selectors test"
        },
        {
          "fileName": "<FTName|pascalcase>/model/services/fetch<FTName|pascalcase>/fetch<FTName|pascalcase>.ts",
          "template": "services"
        },
        {
          "fileName": "<FTName|pascalcase>/model/services/fetch<FTName|pascalcase>/fetch<FTName|pascalcase>.test.ts",
          "template": "services test"
        },
        {
          "fileName": "<FTName|pascalcase>/model/slice/<FTName|camelcase>.ts",
          "template": "slice"
        },
        {
          "fileName": "<FTName|pascalcase>/model/slice/<FTName|camelcase>.test.ts",
          "template": "slice test"
        },
        {
          "fileName": "<FTName|pascalcase>/ui/<FTName|pascalcase>.tsx",
          "template": "TS FC"
        },
        {
          "fileName": "<FTName|pascalcase>/ui/<FTName|camelcase>.test.ts",
          "template": "test ts fc"
        },
        {
          "fileName": "<FTName|pascalcase>/ui/<FTName|pascalcase>.async.tsx",
          "template": "TS FC Async"
        },
        {
          "fileName": "<FTName|pascalcase>/ui/<FTName|pascalcase>.m.css",
          "template": "CSS"
        },
        {
          "fileName": "<FTName|pascalcase>/ui/<FTName|pascalcase>.stories.tsx",
          "template": "Stories"
        },
        { "fileName": "<FTName|pascalcase>/index.ts", "template": "TS INDEX" }
      ]
    }
  ],
  "folderTemplates.fileTemplates": {
    "css": [
      ".root {",
      " display: block;",
      "}",
      ""
    ],
    "stories": [
      "import { <FTName|pascalcase> } from './<FTName|pascalcase>';",
      "",
      "import type { Meta, StoryObj } from '@storybook/react';",
      "",
      "const meta = {",
      "  title: '/<FTName|pascalcase>',",
      "  component: <FTName|pascalcase>,",
      "  tags: ['autodocs'],",
      "} satisfies Meta<typeof <FTName|pascalcase>>;",
      "",
      "export default meta;",
      "type Story = StoryObj<typeof meta>;",
      "",
      "export const Default: Story = {",
      "  args: {},",
      "  decorators: [],",
      "};",
      ""
    ],
    "TS component": [
      "import clsx from 'clsx';",
      "import { useTranslation } from 'react-i18next';",
      "",
      "import css from './<FTName|pascalcase>.m.css';",
      "",
      "type Props = {",
      "  className?: string;",
      "}",
      "",
      "export const <FTName|pascalcase> = (props: Props) => {",
      "  const { className } = props;",
      "  const { t } = useTranslation();",
      "",
      "  return (",
      "    <div className={clsx(css.root, className)}>",
      "      <div/>",
      "      </div>",
      "  );",
      "};",
      ""
    ],
    "TS memo component": [
      "import { memo } from 'react';",
      "",
      "import clsx from 'clsx';",
      "import { useTranslation } from 'react-i18next';",
      "",
      "import css from './<FTName|pascalcase>.m.css';",
      "",
      "",
      "type Props = {",
      "  className?: string;",
      "}",
      "",
      "export const <FTName|pascalcase> = memo(function <FTName|pascalcase>(props: Props) {",
      "  const { className } = props;",
      "  const { t } = useTranslation();",
      "",
      "  return (",
      "    <div className={clsx(css.root, className)}>",
      "      <div/>",
      "      </div>",
      "  );",
      "});",
      ""
    ],
    "page index": [
      "export { <FTName|pascalcase>Lazy as <FTName|pascalcase> } from './ui/<FTName|pascalcase>.lazy';",
      ""
    ],
    "page page": [
      "import { useTranslation } from 'react-i18next';",
      "",
      "import { Page } from '~/widgets/Page';",
      "const <FTName|pascalcase> = () => {",
      "  const { t } = useTranslation('');",
      "",
      "  return <Page data-testid=\"<FTName|pascalcase>\">{t('<FTName|pascalcase>')}</Page>;",
      "};",
      "",
      "export default <FTName|pascalcase>;",
      ""
    ],
    "page lazy": [
      "import { lazy } from 'react';",
      "",
      "export const <FTName|pascalcase>Lazy = lazy(() => import('./<FTName|pascalcase>'));",
      ""
    ],
  }
}
