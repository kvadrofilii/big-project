{
  "compilerOptions": {
    // Строгий режим
    "strict": true,
    // Проверка на null и undefined
    "strictNullChecks": true,
    // Папка дистрибутива
    "outDir": "./dist/",
    // Изоляция типов
    "isolatedModules": true,
    // Подсвечивает все места где не указан тип
    // Однако это не означает, что теперь вовсе нельзя использовать any.
    // Это означает лишь, что в подобных ситуация разработчик должен явно писать any
    "noImplicitAny": true,
    // Какие импорты использовать
    "module": "ESNext",
    // В какую спецификацию компилируем: для поддержки большинства браузеров
    "target": "es5",
    // Поддержка jsx
    // Стандартное значение "react"
    // Значение "react-jsx", позволяет не импортировать React в компонентах
    "jsx": "react-jsx",
    // Компилятор будет обрабатывать не только TS файлы, но и JS файлы
    "allowJs": true,
    // Правило определяет какие импорты будут node или classic
    "moduleResolution": "node",
    // esModuleInterop позволяет работать с пакетами, которые используют
    // common js как с обычными пакета с помощью import (require() module.export) = common js
    // import Moment from 'moment';
    // без флага esModuleInterop результат undefined
    // console.log(Moment);
    // c флагом результат [object Object]
    // console.log(Moment);
    "esModuleInterop": true,
    // Если какая-либо библиотека не имеет default import,
    // лоадеры вроде ts-loader или babel-loader автоматически создают их
    // вместо такого импорта
    // import * as React from 'react';
    // можно писать такой
    // import React from 'react';
    "allowSyntheticDefaultImports": true,
    // Задаём откуда считать абсолютные пути импортов
    "baseUrl": ".",
    "paths": {
      "@/*": ["./src/*"]
    },
    "plugins": [
      {
        // Плагин для типизации css-modules
        // https://www.npmjs.com/package/typescript-plugin-css-modules
        "name": "typescript-plugin-css-modules",
        "options": {
          "customMatcher": "\\.m\\.css$"
        }
      }
    ]
  },
  // Необходим для работы typescript в webpack.config.ts
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  },
  "include": [
    "**/*.ts",
    "**/*.tsx",
    "**/*.d.ts",
    "./config/jest/jest-setup.ts",
    "src/shared/config/storybook/StyleDecorator",
    "./webpack.config.ts"
  ],
  "exclude": ["./node_modules", "./build", "./dist", "babel.config.js", ".eslintrc.js"]
}
